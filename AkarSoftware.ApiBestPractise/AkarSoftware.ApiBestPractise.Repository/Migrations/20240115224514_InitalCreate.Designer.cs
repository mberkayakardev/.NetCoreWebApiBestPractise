// <auto-generated />
using System;
using AkarSoftware.ApiBestPractise.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AkarSoftware.ApiBestPractise.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240115224514_InitalCreate")]
    partial class InitalCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AkarSoftware.ApiBestPractise.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kategori", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Kalemler",
                            CreatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(258),
                            UpdatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(273)
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Kitaplar",
                            CreatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(275),
                            UpdatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(276)
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Defterler",
                            CreatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(277),
                            UpdatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(277)
                        });
                });

            modelBuilder.Entity("AkarSoftware.ApiBestPractise.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<decimal>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Urunler", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(447),
                            Name = "Kalem1",
                            Price = 100m,
                            Stock = 20,
                            UpdatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(448)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(452),
                            Name = "Kalem2",
                            Price = 150m,
                            Stock = 120,
                            UpdatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(452)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(454),
                            Name = "Kalem3",
                            Price = 150m,
                            Stock = 120,
                            UpdatedDate = new DateTime(2024, 1, 16, 1, 45, 14, 318, DateTimeKind.Local).AddTicks(454)
                        });
                });

            modelBuilder.Entity("AkarSoftware.ApiBestPractise.Core.Entities.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");
                });

            modelBuilder.Entity("AkarSoftware.ApiBestPractise.Core.Entities.Product", b =>
                {
                    b.HasOne("AkarSoftware.ApiBestPractise.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AkarSoftware.ApiBestPractise.Core.Entities.ProductFeature", b =>
                {
                    b.HasOne("AkarSoftware.ApiBestPractise.Core.Entities.Product", "Product")
                        .WithOne("Feature")
                        .HasForeignKey("AkarSoftware.ApiBestPractise.Core.Entities.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AkarSoftware.ApiBestPractise.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AkarSoftware.ApiBestPractise.Core.Entities.Product", b =>
                {
                    b.Navigation("Feature")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
